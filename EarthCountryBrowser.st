'From Pharo12.0.0SNAPSHOT of 27 February 2025 [Build information: Pharo-12.0.0+SNAPSHOT.build.1564.sha.d516e0197ef6109910d2421a1a0c8cf19c466f29 (64 Bit)] on 7 March 2025 at 10:27:12.673568 am'!SpPresenterWithModel subclass: #EarthCountryBrowser	instanceVariableNames: 'countryList countryCode countryFlag'	classVariableNames: ''	package: 'SummerSchool'!!EarthCountryBrowser methodsFor: 'initialization' stamp: '3/7/2025 08:45'!initializePresenters  super initializePresenters.  countryList := self newDropList.  countryList display: [ :item | item name ].  countryList sortingBlock: [ :a :b | a model name < b model name ].  countryList items: self model countriesGet .  countryCode := self newTextInput.  countryCode editable: false.  countryCode text: '--'.  countryFlag := self newImage! !!EarthCountryBrowser methodsFor: 'initialization' stamp: '3/7/2025 08:49'!connectPresenters	countryList whenSelectedItemChangedDo: [ :item |	self onCountrySelected: item ].! !!EarthCountryBrowser methodsFor: 'layout' stamp: '3/7/2025 08:45'!defaultLayout   ^ SpBoxLayout newTopToBottom   add: (SpBoxLayout newLeftToRight   add: countryList expand: true;	add: countryCode width: 40)	height: self class toolbarHeight;	add: countryFlag height: 350;	yourself! !!EarthCountryBrowser methodsFor: 'as yet unclassified' stamp: '3/7/2025 09:07'!flagForCountryCode: astring	| request pngArray |	request := ZnClient new.	request get:	'https://flagcdn.com/w320/' , astring asLowercase , '.png'.	request isSuccess ifTrue: [	pngArray := request response contents.	^ ImageReadWriter formFromStream: (ReadStream on: pngArray) ].	^ BorderedMorph new asForm! !!EarthCountryBrowser methodsFor: 'as yet unclassified' stamp: '3/7/2025 09:16'!onCountrySelected: countryItem	countryCode text: '    ' , countryItem code.	self showFlag: countryItem code! !!EarthCountryBrowser methodsFor: 'as yet unclassified' stamp: '3/7/2025 10:21'!showFlag: countryItem	| flag roassal| 	flag := (self flagForCountryCode: (countryItem )).	roassal := (self newRoassal: flag).	self countryFlag: roassal.	! !!EarthCountryBrowser methodsFor: 'accessing' stamp: '3/7/2025 08:48'!countryList	^ countryList! !!EarthCountryBrowser methodsFor: 'accessing' stamp: '3/7/2025 08:48'!countryList: anObject	countryList := anObject! !!EarthCountryBrowser methodsFor: 'accessing' stamp: '3/7/2025 08:48'!countryCode	^ countryCode! !!EarthCountryBrowser methodsFor: 'accessing' stamp: '3/7/2025 08:48'!countryCode: anObject	countryCode := anObject! !!EarthCountryBrowser methodsFor: 'accessing' stamp: '3/7/2025 08:48'!countryFlag	^ countryFlag! !!EarthCountryBrowser methodsFor: 'accessing' stamp: '3/7/2025 08:48'!countryFlag: anObject	countryFlag := anObject! !!EarthCountryBrowser methodsFor: 'instance creation' stamp: '3/7/2025 10:20'!newRoassal: color    <inspectorPresentationOrder: 0 title: 'Shape'>    | canvas roassalPresenter shape |    canvas := RSCanvas new.	 canvas color: color.    roassalPresenter := SpRoassalPresenter new.    roassalPresenter canvas: canvas.    ^ roassalPresenter.! !